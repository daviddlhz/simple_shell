#include <stdio.h>
#include <unistd.h>
#include <sys/types.h>
#include <sys/wait.h>
#include <stdlib.h>
#include <string.h>
#define TOKEN_DELIMITERS " \t\r\n\a :"
/**
 *main - executed a program.
 *@ac: pointer of a pointer
 *@av: pointer to a pointer
 *@env: pointer to a pointer
 *Return: nothing
 */
int main(int ac, char **av, char **env)
{
	(void) ac;
	(void) av;
	char *commands = NULL;
	char *argv[100];
	size_t length = 0;
	int status;
	int i;
	//char *envList[] = {"/bin", NULL};

	while (1)
	{
		i = 0;

		printf("minishell$ ");
		getline(&commands, &length, stdin);

		commands = strtok(commands, TOKEN_DELIMITERS);

		while (commands != NULL)
		{
			printf("commands: %s \n", commands);
			argv[i] = commands;
			printf("argv: %s \n", argv[i]);
			commands = strtok(NULL, TOKEN_DELIMITERS);
			i++;
		}
		argv[i] = NULL;

		if (fork() == 0)
		{
			printf("entrando al hijo para realizar el proceso \n");

			execve(argv[0], argv, env);
			/*printf("\n");
			  exit(0);*/
		}

		wait(&status);
	}

	return (0);
}
